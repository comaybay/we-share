create table if not exists post_teams (
  id bigint primary key generated by default as identity,
  date_created timestamp with time zone not null, 
  date_last_updated timestamp with time zone, 
  title varchar(255) not null,
  slug varchar(255) not null,
  content varchar(10000) not null,
  course_code varchar(255),
  needed_skills varchar(50)[] not null,
  view_count bigint not null default 0,

  author_id uuid references profiles(id) not null
);
alter table post_teams enable row level security;


create policy "Public post_teams are viewable by everyone."
  on post_teams for select
  using ( true );

create policy "Users can insert their own post_teams."
  on post_teams for insert
  with check ( auth.uid() = author_id );

create policy "Users can update their own post_teams."
  on post_teams for update
  using ( auth.uid() = author_id );

create policy "Users can delete their own post_teams."
  on post_teams for delete
  using ( auth.uid() = author_id );