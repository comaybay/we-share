create table if not exists post_teams (
  id bigint primary key generated by default as identity,
  date_created timestamp with time zone not null, 
  date_last_updated timestamp with time zone, 
  title varchar(255) not null,
  slug varchar(255) not null,
  text_content varchar(10000) not null,
  content varchar(100000) not null,
  team_size smallint not null check (team_size >= 2 and team_size <= 100),
  is_team_full boolean not null default FALSE,
  course_code varchar(255) not null,
  needed_skills varchar(50)[] not null,
  view_count bigint not null default 0,

  author_id uuid references profiles(id) not null
);
alter table post_teams enable row level security;


create policy "Public post_teams are viewable by everyone."
  on post_teams for select
  using ( true );

create policy "Users can insert their own post_teams."
  on post_teams for insert
  with check ( auth.uid() = author_id );

create policy "Users can update their own post_teams."
  on post_teams for update
  using ( auth.uid() = author_id );

create policy "Users can delete their own post_teams."
  on post_teams for delete
  using ( auth.uid() = author_id );

-- inserts a row into public.users
create function public.update_post_teams_is_team_full()
returns trigger
language plpgsql
security definer set search_path = public
as $$
begin
  update post_teams 
  set is_team_full = team_size <= (
    select COUNT(*) from post_team_members
    where post_team_members.post_team_id = id
  );
  return new;
end;
$$;

-- trigger the function every time team_size is updated
create trigger on_post_teams_team_size_updated
  after update of team_size on post_teams
  for each row execute procedure public.update_post_teams_is_team_full();

-- trigger the function every time a new member is added or removed out of the team
create trigger on_post_team_members_created
  after insert on post_team_members
  for each row execute procedure public.update_post_teams_is_team_full();

create trigger on_post_team_members_deleted
  after delete on post_team_members
  for each row execute procedure public.update_post_teams_is_team_full();
